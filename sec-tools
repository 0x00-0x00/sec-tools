#!/bin/bash -e

function usage()
{
    cat <<END
Usage: $(basename $0) (list|setup|install|uninstall) tool

Where:
    tool        the name of the tool. if "all", does the action on all tools

Actions:
    setup       set up the environment (adds sec-tools/bin to your
                \$PATH in .bashrc)
    list        list all tools
    install     installs a tool
    uninstall   uninstalls a tool

END
}

ACTION=$1
TOOL=$2
PACKAGE_REQS="build-essential libtool g++ gcc texinfo curl zlib1g wget automake autoconf python-dev git subversion python-pip"

if [ "$TOOL" == "all" ]
then
    for t in $($0 list)
    do
        $0 $ACTION $t
    done
elif [ -z "$TOOL" -a "$ACTION" != "list" -a "$ACTION" != "setup" ]
then
    usage
    exit
fi

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd $DIR

case $ACTION in
    setup)
        sudo apt-get install -y $PACKAGE_REQS
        echo "export CTF_ROOT=\"$DIR\" # DO NOT EDIT This is added by sec-tools" >> ~/.bashrc
        CTF_ROOT=$DIR
        echo "export PATH=\"$CTF_ROOT/bin:$CTF_ROOT:\$PATH\" # DO NOT EDIT This is added by sec-tools" >> ~/.bashrc
        mkdir $CTF_ROOT/bin
        echo "[*] Set up done. Now run \`source ~/.bashrc\` to set the paths!"
        ;;
    list)
        for t in */*
        do
            [ ! -e "$t/install-ctf.sh" ] && continue
            echo $t
        done
        ;;
    install)
        cd $TOOL

        echo "[+] Installing $TOOL"
        if ./install-ctf.sh
        then
            echo "[+] Install finished"
        else
            echo "[-] Install FAILED"
            exit 1
        fi
        ;;
    uninstall)
        cd $TOOL
        [ -x ./uninstall.sh ] && ./uninstall.sh
        cd ..
        ;;
    test)
        if toolname=$(expr match "$TOOL" '.*/\(.*\)')
        then
            if ! cat README.md | grep '!--test--' | grep -q -- '\[$toolname\]'
            then
                $0 install $TOOL &>/dev/null
                echo "[+] [$TOOL] Test install finished."
            else
                echo "[-] [$TOOL] Test disabled."
            fi
        else
            echo "[-] [$TOOL] Tool not found."
        fi
        ;;
    *)
        ;;
esac
